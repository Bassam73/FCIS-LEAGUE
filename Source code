#include<iostream>
#include <fstream>
#include<algorithm>

using namespace std;
struct date
{
    int day, month, year;
};

struct player
{
    int ID;
    string name;
    string nationality;
    date birth;
};

struct team
{
    int ID;
    string name;
    player Players[34];
};

player p[34];
//functions
void ADMIN();
void User();
void Aregister();
void Alogin();
void addTeams();
void addplayers();
void generate();
void Usignup();
void Ulogin();
void Afunctions();
/////////////////////////////////////////////////////////////////////////////////////////////////

//global variables 

const int NUM_TEAMS = 20;
string teams[NUM_TEAMS];

//main fuctions for admin and user 
int main()
{
    //Select user or admin 

    cout << "\t\t\t ------------------ Welcome to FCIS League----------------- \t\t\t" << endl;
    cout << "Please Select ADMIN Or User" << endl;
    cout << "1- ADMIN" << endl;
    cout << "2- User" << endl;
    //Process
    int ADMINorUSER;
    cin >> ADMINorUSER;
    switch (ADMINorUSER)
    {
    case 1:
        ADMIN();
        break;
    case 2:
        User();
        break;
    default:
        system("cls");
        cout << "please choose 1 or 2 \n";
        main();
        break;
    }
}
void ADMIN()
{
    int AloginorAregister;
    cout << " ----------------- main menu ------------------\n";
    cout << "choose 1 or 2 \n";
    cout << "1- register \n";
    cout << "2- login  \n";
    cin >> AloginorAregister;
    switch (AloginorAregister)
    {
    case 1:
        Aregister();
        break;
    case 2:
        Alogin();
        break;
    default:
        system("cls");
        cout << "Please select 1 or 2" << endl;
        ADMIN();
        break;
    }
}

void User()
{
    int UserVariable;

    cout << "\t\t\t---------Welcome to User---------\t\t\t\n";
    cout << "Please select 1 or 2 \n";
    cout << "1-Register\n";
    cout << "2-Login\n";
    cin >> UserVariable;
    switch (UserVariable)
    {
    case 1:
            Usignup();
            break;
    case 2:
             Ulogin();
             break;
    default:
             system("cls");
             User();  
             break;
    }
}



/////////////////////////////////////////////////////////////////////////////////////////////////




//Admin Register And login 

void Aregister()
{
    string Ausername, Apassowrd;
    cout << "--------------------------------------------------------------------------------------------\n";
    cout << " Enter the username  : ";
    cin >> Ausername;
    cout << " Enter the password  : ";
    cin >> Apassowrd;
    ofstream f1("records.txt", ios::app);
    f1 << Ausername << ' ' << Apassowrd << endl;
    system("cls");
    cout << "you have registered successfully\nLogin now with your account";
    ADMIN();
}


void Alogin()
{
    bool count = 0;
    string Ausername, Apassowrd, Aemail, id, password;
    cout << "--------------------------------------------------------------------------------------------\n";
    cout << " Enter the username  : ";
    cin >> Ausername;
    cout << " Enter the password  : ";
    cin >> Apassowrd;
    ifstream input("records.txt");

    while (input >> id >> password)
    {
        if (id == Ausername && password == Apassowrd)
            count = 1;
    }
    if (count == 1)
    {
        system("cls");
        cout << "You logged in successfully\n";
        Afunctions();
    }
    else
    {
        system("cls");
        cout << "Please check your information\n";
        ADMIN();
    }
}


/////////////////////////////////////////////////////////////////////////////////////////////////

/*User Register And Login*/


void Ulogin() 
{
    int count{};
    string email2, password2, emailz, passwordz;
    cout << "\t\t\t ------------------FCIS League----------------- \t\t\t" << endl;
    cout << "please enter email and password :" << "\n";
    cin >> email2 >> password2;
    ifstream input("UserSignup.txt");
    while (input >> emailz >> passwordz)
    {
        if (email2 == emailz && password2 == passwordz)
        {
            count = 1;
            system("cls");
        }
        input.close();
        if (count == 1)
        {
            cout << "login succesful" << "\n";
            main();
        }
        else {
            cout << "LOGIN FAILED, TRY AGAIN" << "\n";
            Ulogin();
        }

    }
}


void Usignup()
{
    string firstname, lastname, fullname, emailaddress, password, password_check;
    cout << "please enter your first name :\t"; cin >> firstname; cout << "\n";

    cout << "please enter your last name : \t"; cin >> lastname; cout << endl;

    fullname = firstname + " " + lastname;
    cout << "welcome " << fullname << "\n";
    cout << "please enter your email address :" << "\n";
    cin >> emailaddress;
   cout << "please enter your password :" << "\n"; 
    cin >> password;
    ofstream f1("UserSignup.txt", ios::app);
    f1 << emailaddress << ' ' << password << "\n";
    cout << "please confirm your password :" << "\n";
    cin >> password_check;
    for (int i = 0; i < 2; i++)
    {
        if (password == password_check)
        {
            cout << "signup succsesful" << "\n";
            cout << "welcome to FCIS league" << "\n";
            User();
            break;
        }
        else {

            cout << "please try again :" << "\n";
        }
        cin >> password_check;
    }

}
////////////////////////////////////////////////////////////////////////////////
//ADMIN FUNCTIONS
void Afunctions (){
   for(int i=0;i<2;i++)
    {
        int choice;
          cout<<" select  \n";
                cout << "1 - Enter teams  : "<<endl;
                    cout << " 2- Enter players  : "<<endl;
                    cin>>choice;

          switch (choice)
    {
    case 1:
        addTeams();
        break;
    case 2:
        addplayers();

    break;
    default:
        system("cls");


    }
}
    }


void addTeams()
{
    cout << "Please enter the names of the " << NUM_TEAMS << " teams:" << endl;
    for (int i = 0; i < NUM_TEAMS; i++) {
        cout << "Team " << i + 1 << ": ";
        cin >> teams[i];
    }
    ofstream Teams;
    Teams.open("Teams.txt");
    for (int i = 0; i < NUM_TEAMS; i++)
    {
        Teams << teams[i] << endl;
    }
    Teams.close();

    cout << "The " << NUM_TEAMS << " teams have been added." << endl;
}
void addplayers()
{
    for (int j = 0; j < NUM_TEAMS; j++)
    {
        cout << "Enter " << teams[j] << " players'" << '\n';
       
        for (int i = 0; i < 34; i++)
        {
            player players;
            cout << "Enter player "<< i+1 <<" id\n";

            cin >> p[i].ID;

            cout << "----------------\n";

            cout << "Enter player "<<i+1<<" name\n";

            cin >> p[i].name;

            cout << "----------------\n";

            cout << "Enter player " << i + 1 << " nationality\n";
            cin >> p[i].nationality;
            cout << "----------------\n";

            cout << "Enter player" << i + 1 << " birth date\n";
            cin >> p[i].birth.day >> p[i].birth.month >> p[i].birth.year;
            cout << "----------------\n";

            ofstream file;
            file.open("players.txt");
            if (file.is_open()) {

                for (int i = 0; i < 34; i++)
                {
                    file << p[i].ID << endl;
                    file << p[i].name << endl;
                    file << p[i].nationality << endl;
                    file << p[i].birth.day << endl;
                    file << p[i].birth.month << endl;
                    file << p[i].birth.year << endl;

                }

                file.close();
            }

        }
        cout << "\n\n\n";
    }
}
void generate()
{
    int NUM_TEAMS = 20;
    int NUM_ROUNDS = 19;


    for (int round = 0; round < NUM_ROUNDS; round++)
    {
        cout << "Round " << round + 1 << ":\n";

        for (int i = 0; i < NUM_TEAMS / 2; i++)
        {
            string teamA = teams[i];
            string teamB = teams[NUM_TEAMS - i - 1];
            cout << teamA << " vs " << teamB << "\n";
        }
        cout << "----------------\n";
        rotate(teams + 1, teams + NUM_TEAMS - 1, teams + NUM_TEAMS);
    }
}


