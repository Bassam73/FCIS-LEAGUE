#include<iostream>
#include<string>
#include<fstream>
#include<iomanip>


using namespace std;

// global variables

const int NUM_TEAMS = 20;

const int NUM_ROUNDS = 19;

const int MAX_TEAMS = 20;

const int MAX_PLAYERS_PER_TEAM = 34;

bool start = 0;

bool DataEntered = false;

bool RoundPlayed[19] = { 0 };

bool Generate = 0;

int rounds = 0;

struct Date {
	int day;
	int month;
	int year;
};


struct Player {
	int id;
	string name, nation;
	Date birthdate;
};

struct Team {
	string name;
	Player players[34];
	int points = 0;
	int GD = 0;
	int id;
};

struct Result {

	int Id;
	int TeamHomeGoals;
	int TeamAwayGoals;
};

struct Matches
{
	int ID[190] = { 0 };
	string TeamHome[190];
	string TeamAway[190];
	int Time[190] = { 0 };
	int Results[190][2] = { 0 };
};

struct League
{
	Team team[20];
	Matches matches[190];
	/*Table Struct*/
} FCIS;


struct TableRecord
{


};




//functions
void ADMIN();
void User();
void Aregister();
void Alogin();
void TeamData();
void generate();
void Usignup();
void Ulogin();
void Afunctions();
void startseason();
void res(int i);
void table(int played);
void Logout();
void Ufunctions();
void Tinformations();
void Uschedule();
void Utable();
void PlayerDetailis(int i);
void Matchinfo();



//main fuctions for admin and user
int main()
{
	//Select user or admin
	cout << "\t\t\t ------------------ Welcome to FCIS League----------------- \t\t\t" << endl;
	cout << "Please Select ADMIN Or User" << endl;
	cout << "1- ADMIN" << endl;
	cout << "2- User" << endl;
	//Process
	int ADMINorUSER;
	cin >> ADMINorUSER;
	switch (ADMINorUSER)
	{
	case 1:
		ADMIN();
		break;
	case 2:
		User();
		break;
	default:
		system("cls");
		cout << "please choose 1 or 2 \n";
		main();
		break;
	}
}
void ADMIN()
{
	int AloginorAregister;
	cout << " ----------------- MAIN MENU ------------------\n";
	cout << "choose 1 or 2 \n";
	cout << "1- register \n";
	cout << "2- login \n";
	cin >> AloginorAregister;
	switch (AloginorAregister)
	{
	case 1:
		Aregister();
		break;
	case 2:
		Alogin();
		break;
	default:
		system("cls");
		cout << "Please select 1 or 2" << endl;
		ADMIN();
		break;
	}
}

void User()
{
	int UserVariable;

	cout << "\t\t\t-------------Welcome to User-------------\t\t\t\n";
	cout << "Please select 1 or 2 \n";
	cout << "1-Register\n";
	cout << "2-Login\n";
	cin >> UserVariable;
	switch (UserVariable)
	{
	case 1:
		Usignup();
		break;
	case 2:
		Ulogin();
		break;
	default:
		system("cls");
		User();
		break;
	}
}





//Admin Register And login

void Aregister()
{
	string Ausername, Apassowrd, Eusername, Epassword;
	bool count = 0;
	cout << "--------------------------------------------------------------------------------------------\n";
	cout << " Enter the username : ";
	cin >> Ausername;
	cout << " Enter the password : ";
	cin >> Apassowrd;
	ofstream f1("records.txt", ios::app);
	ifstream input("records.txt");
	f1 << Ausername << ' ' << Apassowrd << endl;

	while (input >> Eusername >> Epassword)
	{
		if (Eusername == Ausername && Epassword == Apassowrd)
			count = 1;
	}
	if (count == 1)
	{

		system("cls");

		cout << "Your Username or password is already existed , please try again \n ";

		ADMIN();
	}
	system("cls");
	cout << "you have registered successfully\nLogin now with your account";
	ADMIN();
}

void Alogin()
{
	bool count = 0;
	string Ausername, Apassowrd, Aemail, id, password;
	cout << "--------------------------------------------------------------------------------------------\n";
	cout << "Enter the username : ";
	cin >> Ausername;
	cout << "Enter the password : ";
	cin >> Apassowrd;
	ifstream input("records.txt");

	while (input >> id >> password)
	{
		if (id == Ausername && password == Apassowrd)
			count = 1;
	}
	if (count == 1)
	{
		system("cls");
		cout << "You logged in successfully\n";
		Afunctions();
	}
	else
	{
		system("cls");
		cout << "Please check your information\n";
		ADMIN();
	}
}



// User Register And Login /
void Ulogin()
{
	bool count = 0;
	string email2, password2, emailz, passwordz;
	cout << "\t\t\t ------------------FCIS League----------------- \t\t\t" << endl;
	cout << "please enter your email: ";
	cin >> email2; cout << endl;
	cout << "please enter your password: ";
	cin >> password2; cout << endl;
	ifstream input("UserSignup.txt");
	while (input >> emailz >> passwordz)
	{
		if (email2 == emailz && password2 == passwordz)
		{
			count = 1;
			system("cls");
		}
		input.close();
		if (count == 1)
		{
			cout << "login succesful" << "\n";
			Ufunctions();
			break;
		}
		else {
			cout << "LOGIN FAILED, TRY AGAIN" << "\n";
			Ulogin();
			break;
		}
	}

}
void Usignup()
{
	string firstname, lastname, fullname, emailaddress, password, password_check;
	cout << "please enter your first name :\t"; cin >> firstname; cout << "\n";

	cout << "please enter your last name : \t"; cin >> lastname; cout << endl;

	fullname = firstname + " " + lastname;
	cout << "welcome " << fullname << "\n";

	cout << "please enter your email address : ";
	cin >> emailaddress; cout << endl;

	cout << "please enter your password : ";
	cin >> password; cout << endl;

	cout << "please confirm your password :";
	cin >> password_check; cout << endl;


	if (password == password_check)
	{
		cout << "signup succsesful" << "\n";
		cout << "welcome to FCIS league" << "\n";
		User();

	}
	else
	{

		cout << "please try again :" << "\n";
		Usignup();
	}


	ofstream f1("UserSignup.txt", ios::app);
	f1 << emailaddress << ' ' << password_check << "\n";


}

//ADMIN FUNCTIONS
void Afunctions() {
	for (int i = 0; i < 1000; i++)
	{
		int choice;
		cout << "select \n";
		if (start == 0)
		{
			cout << "1-Enter teams and players " << endl;
			cout << "2-Generate Matches " << endl;
			cout << "3-start season\n";
			cout << "4-logout\n";
			cin >> choice;
			cout << "--------------------------------------------------------------------------------------------\n";
			if (choice == 1)
			{
				TeamData();
				DataEntered = true;
			}
			if (choice == 2 && DataEntered)
			{
				Generate = 1;
				generate();
				Afunctions();
				break;
			}
			if ((choice == 2 || choice == 3) && !DataEntered)
			{

				system("cls");
				cout << " enter team data first \n";
				cout << "--------------------------------------------------------------------------------------------\n";
			}
			if (choice == 3 && DataEntered && Generate == 1)
			{
				startseason();
				break;
			}
			if (choice == 3 && Generate == 0)
			{
				system("cls");
				cout << "Please Generate matches First \n";
			}
			if (choice == 4)
			{
				Logout();
				break;
			}
		}
		else if (start == 1)
		{
			cout << "1-Continue the season " << endl;
			cout << "2-logout\n";
			cin >> choice;
			cout << "--------------------------------------------------------------------------------------------\n";
			if (choice == 1)
			{
				startseason();
				break;
			}
			if (choice == 2)
			{
				Logout();
				break;
			}
		}

	}
}

void TeamData()
{

	for (int i = 0; i < 20; i++)
	{
		cout << "Enter the name of team " << i + 1 << ": ";
		cin >> FCIS.team[i].name;
		cout << "Enter names , birthdates and nations of the players in team " << i + 1 << ":" << endl;
		for (int j = 0; j < 34; j++) {
			cout << "Enter player " << j + 1 << " name: ";
			cin >> FCIS.team[i].players[j].name;
			FCIS.team[i].players[j].id = (i + 1) * (j + 1);
			cout << "Enter player " << j + 1 << " nation: ";
			cin >> FCIS.team[i].players[j].nation;
			cout << "Enter player " << j + 1 << " birthdate (day / month / year): ";
			cin >> FCIS.team[i].players[j].birthdate.day;
			cin >> FCIS.team[i].players[j].birthdate.month;
			cin >> FCIS.team[i].players[j].birthdate.year;
		}
	}
	ofstream file;
	file.open("teams.txt");
	file << 20 << endl;
	for (int i = 0; i < 20; i++)
	{
		file << FCIS.team[i].name << endl;
		file << 34 << endl;
		for (int j = 0; j < 34; j++) {

			file << FCIS.team[i].players[j].name << endl;
			file << FCIS.team[i].players[j].id << endl; 
			file << FCIS.team[i].players[j].nation << endl;
			file << FCIS.team[i].players[j].birthdate.day << " "
				<< FCIS.team[i].players[j].birthdate.month << " "
				<< FCIS.team[i].players[j].birthdate.year << endl;
			file << '\n';
		}
		file << '\n';
	}
	file.close();
}

void generate()
{
	int NUM_ROUNDS = 19;
	string teams[NUM_TEAMS];
	int id = 1;
	ofstream file;
	file.open("matches.txt");
	for (int i = 0; i < NUM_TEAMS; i++)
	{
		teams[i] = FCIS.team[i].name;
	}

	for (int round = 0; round < NUM_ROUNDS; round++)
	{
		cout << "Round " << round + 1 << ":\n";
		int counter = 0;
		FCIS.matches->Time[id - 1]=4;
		for (int i = 0; i < NUM_TEAMS / 2; i++)
		{
			
			if(counter<3)
			{
				FCIS.matches->Time[id - 1] = 4;
			}
			if (counter >= 3 && counter < 6)
			{
				FCIS.matches->Time[id - 1] = 6;
			}
			if (counter >= 6)
			{
				FCIS.matches->Time[id - 1] = 8;
			}
			FCIS.matches->TeamHome[id - 1] = teams[i];
			FCIS.matches->TeamAway[id - 1] = teams[NUM_TEAMS - i - 1];
			cout << "match " << id << ": " << FCIS.matches->TeamHome[id - 1] << " vs " << FCIS.matches->TeamAway[id - 1] << "   " << FCIS.matches->Time[id - 1] << "PM\n";
			file << "match " << id << ": " << FCIS.matches->TeamHome[id - 1] << " vs " << FCIS.matches->TeamAway[id - 1] << "   " << FCIS.matches->Time[id - 1] << "PM\n";
			FCIS.matches->ID[id - 1] = id;
			counter++;
			id++;
		}
		cout << "----------------\n";
		file << "----------------\n";
		//rotate loop 
		string temp = teams[19];
		for (int i = 19; i >= 1; i--)
		{
			teams[i] = teams[i - 1];
		}
		teams[1] = temp;
	}
}



void startseason()
{
	memset(FCIS.matches->Results, -1, sizeof(FCIS.matches->Results) * 190 * 2);
	start = 1;
	cout << "Do You want to start or continue the season?\ny/n\n";
	char ans = 'y';
	cin >> ans;
	if (ans == 'y')
	{
		system("cls");
		int resume = 1;
		int  id = 0, i = 0;
		for (int i = 0; i < NUM_ROUNDS; i++)
		{
			if (RoundPlayed[i] == 0)
			{
				rounds = i + 1;
				break;
			}
		}
		ofstream file;

		while (true)
		{

			cout << "Round " << rounds << '\n';
			for (i = rounds * 10 - 10; i < rounds * 10; i++)
			{
				if (FCIS.matches->Results[i][0] != -1 && FCIS.matches->Results[i][1] != -1)
					cout << "match " << FCIS.matches->ID[i] << ": " << FCIS.matches->TeamHome[i] << ' ' << FCIS.matches->Results[i][0] << " vs " << FCIS.matches->Results[i][1] << ' ' << FCIS.matches->TeamAway[i] << '\n';
				else
					cout << "match " << FCIS.matches->ID[i] << ": " << FCIS.matches->TeamHome[i] << " vs " << FCIS.matches->TeamAway[i] << '\n';
			}
			cout << "____________________________\n";
			if (rounds != 20)
			{
				cout << "Enter round results:\n";
				for (int j = rounds * 10 - 10; j < rounds * 10; j++)
				{
					res(j);
					system("cls");
					cout << "Round " << rounds << '\n';
					for (int z = rounds * 10 - 10; z < rounds * 10; z++)
					{
						if (FCIS.matches->Results[z][0] != -1 && FCIS.matches->Results[z][1] != -1)
						{
							cout << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << ' ' << FCIS.matches->Results[z][0] << " vs " << FCIS.matches->Results[z][1] << ' ' << FCIS.matches->TeamAway[z] << '\n';
						}
						else
						{
							cout << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << " vs " << FCIS.matches->TeamAway[z] << '\n';
						}
					}
					cout << "____________________________\n";
				}
				file.open("results.txt");
				for (int x = 1; x <= rounds; x++)
				{
					file << "round" << x << '\n';
					for (int z = x * 10 - 10; z < x * 10; z++)
					{
						if (FCIS.matches->Results[z][0] != -1 && FCIS.matches->Results[z][1] != -1)
						{
							file << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << ' ' << FCIS.matches->Results[z][0] << " vs " << FCIS.matches->Results[z][1] << ' ' << FCIS.matches->TeamAway[z] << '\n';
						}
						else
						{
							file << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << " vs " << FCIS.matches->TeamAway[z] << '\n';
						}
					}
					file << "____________________________\n";
				}
				table(rounds);
				RoundPlayed[rounds - 1] = 1;
				file.close();
			}
			else
			{
				cout << "The season has finished\n";
				break;
			}
			rounds++;
			int x;
			cout << " DO YOU WANT TO CONTINUE OR BACK TO MAIN MENU \n";
			cout << "1- CONTINUE \n";
			cout << "2- Main Menu \n";
			cin >> x;
			switch (x)
			{
			case 1:
				continue;
				break;
			case 2:
				Afunctions();
				break;

			}
		}
	}
}


void res(int i)
{

	cout << "match" << i + 1 << ": " << FCIS.matches->TeamHome[i] << " vs " << FCIS.matches->TeamAway[i] << '\n';

	cout << FCIS.matches->TeamHome[i] << " scored: ";
	cin >> FCIS.matches->Results[i][0];

	cout << FCIS.matches->TeamAway[i] << " scored: ";
	cin >> FCIS.matches->Results[i][1];
}


void table(int played)
{
	for (int j = played * 10 - 10; j < played * 10; j++)
	{
		if (FCIS.matches->Results[j][0] > FCIS.matches->Results[j][1])
		{
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamHome[j])
				{
					FCIS.team[z].points += 3;
					FCIS.team[z].GD += FCIS.matches->Results[j][0] - FCIS.matches->Results[j][1];
					break;

				}
			}
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamAway[j])
				{
					FCIS.team[z].GD += FCIS.matches->Results[j][1] - FCIS.matches->Results[j][0];
					break;
				}
			}

		}
		else if (FCIS.matches->Results[j][0] < FCIS.matches->Results[j][1])
		{
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamAway[j])
				{
					FCIS.team[z].points += 3;
					FCIS.team[z].GD += FCIS.matches->Results[j][1] - FCIS.matches->Results[j][0];
					break;
				}
			}
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamHome[j])
				{
					FCIS.team[z].GD += FCIS.matches->Results[j][0] - FCIS.matches->Results[j][1];
					break;
				}
			}
		}
		else if (FCIS.matches->Results[j][0] == FCIS.matches->Results[j][1])
		{
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamHome[j])
				{
					FCIS.team[z].points += 1;
					break;
				}
			}
			for (int z = 0; z < NUM_TEAMS; z++)
			{
				if (FCIS.team[z].name == FCIS.matches->TeamAway[j])
				{
					FCIS.team[z].points += 1;
					break;
				}
			}
		}

	}

	for (int i = 0; i < NUM_TEAMS; i++)
	{
		for (int j = NUM_TEAMS - 1; j >= 0; j--)
		{
			if (i != j)
			{
				if (FCIS.team[i].points < FCIS.team[j].points && i < j)
				{
					swap(FCIS.team[i].name, FCIS.team[j].name);
					swap(FCIS.team[i].points, FCIS.team[j].points);
					swap(FCIS.team[i].GD, FCIS.team[j].GD);
				}
				else if (FCIS.team[i].points == FCIS.team[j].points)
				{
					if (FCIS.team[i].GD < FCIS.team[j].GD && i < j)
					{
						swap(FCIS.team[i].name, FCIS.team[j].name);
						swap(FCIS.team[i].points, FCIS.team[j].points);
						swap(FCIS.team[i].GD, FCIS.team[j].GD);
					}
				}
			}
		}

	}
	cout << "--------------------------------------------------------\n";
	cout << " FCIS League Table \n";
	cout << "--------------------------------------------------------\n";
	cout << "Pos." << "  " << left << setw(20) << "Team" << '\t' << "MP" << '\t' << "Points" << '\t' << "GD" << '\n';
	cout << "--------------------------------------------------------\n";
	ofstream file;
	file.open("table.txt");
	for (int i = 0; i < NUM_TEAMS; i++)
	{
		cout << i + 1 << "-" << left << setw(5) << "  " << left << setw(20) << FCIS.team[i].name << '\t' << played << '\t' << FCIS.team[i].points << '\t' << FCIS.team[i].GD << '\n';
		file << i + 1 << "-" << left << setw(5) << "  " << left << setw(20) << FCIS.team[i].name << '\t' << played << '\t' << FCIS.team[i].points << '\t' << FCIS.team[i].GD << '\n';
	}
	file.close();
}



void Logout() {
	system("cls");
	main();
}



//user functions


void Ufunctions() {

	int FunctionsVariable;
	cout << "\t\t\t\t------------------------------------------- \t\t\t\t\t\n";
	cout << "\t\t\t\t                   Welcome                  \t\t\t\t\t\n";
	cout << "\t\t\t\t------------------------------------------- \t\t\t\t\t\n";

	cout << "Please choose a number \n";
	cout << "1- Teams information \n";
	cout << "2- See the schedule \n";
	cout << "3- See the the table \n";
	cout << "4- Logout \n";

	cin >> FunctionsVariable;

	switch (FunctionsVariable)
	{
	case 1:
		Tinformations();
		break;
	case 2:
		Uschedule();
		break;
	case 3:
		Utable();
		break;
	case 4:
		Logout();
		break;
	default:
		system("cls");
		cout << "Please try again \n";
		Ufunctions();
		break;
	}

}

void Tinformations() {

	int ChooseTeam;

	cout << "Please Select the number of the team \n";

	for (int i = 0; i < 20; i++)
	{
		cout << i + 1 << "-" << FCIS.team[i].name << endl;
	}

	cin >> ChooseTeam;


	cout << FCIS.team[ChooseTeam - 1].name << " Informations : " << endl;
	cout << FCIS.team[ChooseTeam - 1].name << " Has " << FCIS.team[ChooseTeam - 1].points << " points \n";
	cout << "The GD of " << FCIS.team[ChooseTeam - 1].name << " is " << FCIS.team[ChooseTeam - 1].GD << endl;
	cout << "players of the team : \n";
	for (int i = 0; i < 34; i++)
	{
		cout << i + 1 << "-" << FCIS.team[ChooseTeam - 1].players[i].name << endl;
	}
	cout << "-------------------------------------------------------\n";
	
	int TinformationVariable;
	
	cout << "1-Player Details " << endl;
	cout << "2-Choose another team" << endl;
	cout << "3-Main Menu" << endl;
	cout << "4-Logout"<<endl;
	cin >> TinformationVariable;
	
	switch (TinformationVariable)
	{
	case 1:
		PlayerDetailis(ChooseTeam - 1);
		break;
	case 2 :
		system("cls");
		Tinformations();
		break;
	case 3 :
		system("cls");
		Ufunctions();
		break;
	case 4 :
		system("cls");
		Logout();
		break;
	default:
		system("cls");
		cout << "Please try again \n";
		Tinformations();
		break;
	}
}


void Utable()
{
	cout << "--------------------------------------------------------\n";
	cout << " FCIS League Table \n";
	cout << "--------------------------------------------------------\n";
	cout << "Pos." << "  " << left << setw(20) << "Team" << '\t' << "MP" << '\t' << "Points" << '\t' << "GD" << '\n';
	cout << "--------------------------------------------------------\n";
	for (int i = 0; i < NUM_TEAMS; i++)
	{
		cout << i + 1 << "-" << left << setw(5) << "  " << left << setw(20) << FCIS.team[i].name << '\t' << rounds << '\t' << FCIS.team[i].points << '\t' << FCIS.team[i].GD << '\n';
	}
	int choice;
	cout << "1-main menu\n";
	cout << "2-logut\n";
	cin >> choice;
	switch (choice)
	{
	case 1:
		system("cls");
		Ufunctions();
		break;
	case 2:
		system("cls");
		Logout();
		break;
	default:
		system("cls");
		cout << "Please try again \n";
		Ufunctions();
		break;
	}
}




void Uschedule()
{
	int select;
	cout << "select\n";
	cout << "1-Results\n";
	cout << "2-fixtures\n";
	cout << "3-Main Menu\n";
	cin >> select;
	if (select == 1)
	{
		for (int i = 1; i < rounds; i++)
		{
			cout << "Round " << i << ":\n";
			for (int z = i * 10 - 10; z < i * 10; z++)
			{
				cout << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << ' ' << FCIS.matches->Results[z][0] << " vs " << FCIS.matches->Results[z][1] << ' ' << FCIS.matches->TeamAway[z] << '\n';
			}
		}
		int choice;
		cout << "1-select match\n";
		cout << "2-view next fixtures\n";
		cout << "3-main menu\n";
		cout << "4-logout\n";
		cin >> choice;
		switch (choice)
		{
		case 1:
			Matchinfo();
			Uschedule();
			break;
		case 2:
			select = 2;
			break;
		case 3:
			system("cls");
			Ufunctions();
			break;
		case 4:
			system("cls");
			Logout();
			break;
		default:
			system("cls");
			cout << "Please try again \n";
			Ufunctions();
			break;
		}
	}
	if (select == 2)
	{
		for (int i = rounds; i <= 19; i++)
		{
			for (int z = i * 10 - 10; z < i * 10; z++)
			{
				cout << "match " << FCIS.matches->ID[z] << ": " << FCIS.matches->TeamHome[z] << " vs " << FCIS.matches->TeamAway[z] << '\n';
			}
			int choice;
			if (i != 19)
			{
				cout << "1-view next round\n";
				cout << "2-main menu\n";
				cout << "3-logut\n";
				cin >> choice;
				switch (choice)
				{
				case 1:
					continue;
					break;
				case 2:
					system("cls");
					Ufunctions();
					break;
				case 3:
					system("cls");
					Logout();
					break;
				default:

					system("cls");
					cout << "Please try again \n";
					Ufunctions();
					break;
				}
				if (choice == 2 || choice == 3)
					break;
			}
			if (i == 19)
			{
				while (true)
				{
					cout << "1-main menu\n";
					cout << "2-logut\n";
					cin >> choice;
					switch (choice)
					{
					case 1:
						system("cls");
						Ufunctions();
						break;
					case 2:
						system("cls");
						Logout();
						break;
					default:
						system("cls");
						break;
					}
					if (choice == 1 || choice == 2)
					{
						break;
					}
				}
			}
		}
	}
	if (select == 3)
	{
		system("cls");
		Ufunctions();
	}
}


void Matchinfo()
{
	int matchid;
	cout << "Enter Match id:\n";
	cin >> matchid;
	cout << "------------------------------------------------------------\n";
	cout << "Match's time :" << FCIS.matches->Time[matchid] << "Pm\n";

	cout << "Home Team: " << left << setw(7) << FCIS.matches->TeamHome[matchid - 1];
	cout << "scored: " << FCIS.matches->Results[matchid - 1][0] << '\n';

	cout << "Away Team: " << left << setw(7) << FCIS.matches->TeamAway[matchid - 1];
	cout << "scored: " << FCIS.matches->Results[matchid - 1][1] << '\n';
}


void PlayerDetailis(int i) {

	int PlayerNumber;
	cout << "Enter player number : "; 
	cin >> PlayerNumber;


	cout<<"Player's name : " << FCIS.team[i].players[PlayerNumber - 1].name << " \n";
	cout<<"player's id : " << FCIS.team[i].players[PlayerNumber - 1].id << " \n";

	
	cout << "Date Of Birth : " << FCIS.team[i].players[PlayerNumber-1].birthdate.day 
				<< "/" << FCIS.team[i].players[PlayerNumber-1].birthdate.month << "/" 
					  << FCIS.team[i].players[PlayerNumber-1].birthdate.year << endl;

	cout << "Nationality : " << FCIS.team[i].players[PlayerNumber-1].nation<<endl;
	
	int SelectMenu;
	
	cout << "-----------------------------------------------------------\n";
	cout << "1-Select another player "<<endl;
	cout << "2-Select another team " << endl;
	cout << "3-main menu" << endl;
	cout << "4-logut" << endl;
	cin >> SelectMenu;
	switch (SelectMenu)
	{
	case 1:
		PlayerDetailis(i);
		break;
	case 2:
		system("cls");
		Tinformations();
		break;

	case 3:
		system("cls");
		Ufunctions();
		break;
	case 4 :
		system("cls");
		Logout();
		break;
	}
}
